# Quick Start - Deploy everything with one command
# kubectl apply -f quick-start.yaml

# 1. Install CRDs
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: optimizationconfigs.optimizer.io
spec:
  group: optimizer.io
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              mode:
                type: string
                enum: ["observe", "manual", "semi-auto", "full-auto"]
                default: "observe"
  scope: Cluster
  names:
    plural: optimizationconfigs
    singular: optimizationconfig
    kind: OptimizationConfig
---
# 2. Create namespace
apiVersion: v1
kind: Namespace
metadata:
  name: node-optimizer
---
# 3. Deploy controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-optimizer-controller
  namespace: node-optimizer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-optimizer
  template:
    metadata:
      labels:
        app: node-optimizer
    spec:
      serviceAccountName: node-optimizer
      containers:
      - name: controller
        image: node-optimizer:latest
        env:
        - name: MODE
          value: "observe"  # Safe default
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
# 4. RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-optimizer
  namespace: node-optimizer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-optimizer
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
- apiGroups: ["optimizer.io"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-optimizer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-optimizer
subjects:
- kind: ServiceAccount
  name: node-optimizer
  namespace: node-optimizer
---
# 5. Default OptimizationConfig (OBSERVE mode - safe)
apiVersion: optimizer.io/v1alpha1
kind: OptimizationConfig
metadata:
  name: default-config
spec:
  mode: observe  # Just analyze and report, no actions
  safetyThreshold: conservative
  excludeNamespaces:
    - kube-system
    - kube-public
    - kube-node-lease
  schedule: "*/30 * * * *"  # Every 30 minutes
  consolidationEnabled: true
  rightSizingEnabled: true
  binPackingStrategy: best-fit